apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-app
  namespace: cnpg-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-app
  template:
    metadata:
      labels:
        app: python-app
    spec:
      initContainers:
        - name: db-migration
          image: python-app
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Waiting for database to be ready..."
              until pg_isready -U app -d app_db -h pg-vector-rw; do
                echo "Database not ready, waiting..."
                sleep 2
              done
              echo "Database ready, running migrations..."
              # Add your migration commands here
              # python manage.py migrate
              echo "Migrations complete"
          env:
            - name: PGHOST
              value: pg-vector-rw
            - name: PGDATABASE
              value: app_db
            - name: PGUSER
              value: app
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-user-pass
                  key: password
      containers:
        - name: python-app
          image: python-app
          ports:
            - containerPort: 8000
          env:
            - name: PGHOST
              value: pg-vector-rw
            - name: PGDATABASE
              value: app_db
            - name: PGUSER
              value: app
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-user-pass
                  key: password
            - name: PGPOOL_MAX_CONN
              value: "20"
            - name: PGPOOL_MIN_CONN
              value: "5"
            - name: PGCONNECT_TIMEOUT
              value: "10"
            - name: PGCOMMAND_TIMEOUT
              value: "30"
          readinessProbe:
            exec:
              command:
                ["/bin/sh", "-c", "pg_isready -U app -d app_db -h pg-vector-rw"]
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "250m"
